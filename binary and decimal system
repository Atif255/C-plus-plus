#include<iostream>
using namespace std;
int main(){
  int n;
  cin >> n;

  int product =1;
  int sum = 0;

  while (n != 0) {
    int digit = n%10;
    product = product * digit;
    sum = sum + digit;

    n = n/10;
  }
  int answer = product - sum;
  cout << answer;
}
**************************************
//finding no of set bits in number(binary)
#include<iostream>
using namespace std;
int main() {
  int n;
  cin >> n;

  int count = 0;

  while (n != 0) {
    if (n&1) {
      count ++;
    }
    n = n>>1;
  }
  cout << count ;
}
************************************
#include <iostream>
#include<math.h>
using namespace std;
// decimal to binary
int main() {
  int n;
  cin >> n;

  int answer = 0;
  int i =0;

  while (n != 0) {
    int bit = n&1;
    answer = (bit * pow(10,i)) + answer;
    n = n >> 1;
    i++;
    
  }
  cout << answer;
}




#include<iostream>
#include <math.h>
using namespace std;

int decimalToBinary(int n){
    int ans = 0;
    int i = 0;
    while(n!=0){
        int bit = n&1; 
        ans = (bit * pow(10,i)) + ans;
        n = n >> 1;
        i++;
    }
    return ans;
}
int main(){
    int n;
    cin >> n;

    if(n<0){
        // if number is negative
        n = n*(-1);
        int ans = decimalToBinary(n);
    // Find 2's compliment of the number
    // 1's comp
    int newAns = (~ans);
    // 2's comp
    newAns = newAns+1;
    cout << newAns << endl;

    } else {
        // if number is positive 
        int ans = decimalToBinary(n);
        cout << ans << endl;
    }
}
*********************************************************
//binary to decimal
#include<iostream>
#include <math.h>
using namespace std;

int main () {
  int n;
  cin >> n;

  int i = 0;
  int answer = 0;

  while (n != 0) {
    int digit = n % 10; 
    if (digit == 1){
      answer = answer + pow(2,i);
    }
    n = n/10;
    i++;
  }
  cout << answer;
}

